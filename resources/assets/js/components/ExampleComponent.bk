<template>
  <div class="container">
    <div class="row">
      <div class="col-md-8 col-md-offset-2">
        <div class="panel panel-default">
          <div class="panel-heading">Example Component</div>

          <div class="panel-body">
            <g>
              <polygon :points="points"></polygon>
              <circle cx="100" cy="100" r="80"></circle>
              <axis-label
                v-for="(stat, index) in stats"
                :stat="stat"
                :index="index"
                :total="stats.length">
              </axis-label>
            </g>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  export default {
    mounted() {
        console.log('Component mounted.')
    },
    data() {
      return {
        stats : {
          [ label: 'A', value: 100 ],
          [ label: 'B', value: 100 ],
          [ label: 'C', value: 100 ],
          [ label: 'D', value: 100 ],
          [ label: 'E', value: 100 ],
          [ label: 'F', value: 100 ]
        },

      }
    },
    computed: {
      // a computed property for the polygon's points
      points: function () {
        var total = this.stats.length
        return this.stats.map(function (stat, i) {
          var point = valueToPoint(stat.value, i, total)
          return point.x + ',' + point.y
        }).join(' ');
      }
    },
    // components: {
    //   // a sub component for the labels
    //   'axis-label': {
    //     props: {
    //       stat: Object,
    //       index: Number,
    //       total: Number
    //     },
    //     template: '<text :x="point.x" :y="point.y">{{stat.label}}</text>',
    //     computed: {
    //       point: function () {
    //         return valueToPoint(
    //           +this.stat.value + 10,
    //           this.index,
    //           this.total
    //         )
    //       }
    //     }
    //   }
    // },    
  };
  function valueToPoint (value, index, total) {
    var x     = 0
    var y     = -value * 0.8
    var angle = Math.PI * 2 / total * index
    var cos   = Math.cos(angle)
    var sin   = Math.sin(angle)
    var tx    = x * cos - y * sin + 100
    var ty    = x * sin + y * cos + 100
    return {
      x: tx,
      y: ty
    }
  };
</script>
